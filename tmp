import pandas as pd

# Step 1: Read the first Excel file (file1.xlsx)
file1 = 'file1.xlsx'
df1 = pd.read_excel(file1)

# Step 2: Read the second Excel file (file2.xlsx)
file2 = 'file2.xlsx'
df2 = pd.read_excel(file2)

# Step 3: Merge DataFrames on common id columns (1id and 2id)
merged_df = pd.merge(df2, df1[['1id', '1mname']], left_on='2id', right_on='1id', how='left')

# Step 4: Update 2name with 1mname where ids match
df2.loc[merged_df['1mname'].notna(), '2name'] = merged_df['1mname']

# Step 5: Save the updated DataFrame back to file2.xlsx
df2.to_excel(file2, index=False)

print('Update completed and saved to file2.xlsx.')


#######################################################

import pandas as pd

# Define the file paths
file1_path = 'file1.xlsx'
file2_path = 'file2.xlsx'

# Read the first Excel file (file1.xlsx)
df1 = pd.read_excel(file1_path)

# Read the second Excel file (file2.xlsx)
df2 = pd.read_excel(file2_path)

# Create a dictionary from file1 for easy lookup
id_to_mname = {row['1id']: row['1mname'] for index, row in df1.iterrows()}

# Define a function to update the name based on the custom logic
def update_name(row):
    if row['2id'] in id_to_mname:
        return id_to_mname[row['2id']]
    else:
        return "NO MATCH"  # Keep the original name if there's no match

# Apply the update_name function to each row in df2
df2['2name'] = df2.apply(update_name, axis=1)

# Save the updated DataFrame back to file2.xlsx
df2.to_excel(file2_path, index=False)

print('Update completed and saved to file2.xlsx.')
